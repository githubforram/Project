pipeline{
    agent any
    tools{
        maven 'm1'
    }
    stages{
        stage('test'){
            steps{
                sh 'mvn clean test'
            }
        }
        stage('install'){
            steps{
                sh 'mvn clean install -D skipTests=true'
            }
        }
        stage("sonarqube build"){
            steps{
                withSonarQubeEnv('Ram') {
                    sh "mvn clean package sonar:sonar"
                }
            }
        }
        stage("jfrog"){
            steps{
                rtUpload(
                    serverId: 'ram-jfrog',
                    spec: '''{
                        "files": [
                            {
                                "pattern": "**/**/*.*ar",
                                "target": "ram-jfrog/"
                            }
                        ]
                    }'''
                )
            }
        }
        stage('dockerbuild'){
            steps{
                dir("backend"){
                    sh 'docker build -t raamriot/backend:latest .'
                }
                dir("frontend"){
                    sh 'docker build -t raamriot/frontend:latest .'
                }
            }
        }
        stage('docker push'){
            steps{
                withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'Fflkjomoqsq74', usernameVariable: 'user')]) {
                    sh 'docker login -u raamriot -p Fflkjomoqsq74'
                    sh 'docker push raamriot/backend:latest'
                    sh 'docker push raamriot/frontend:latest'
                }
            }
        }
        stage('project-deploy'){
             steps{
                  withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialId: '', namespace: '', restrictKubeConfigAccess: false,
                  serverUrl: ''){
                         sh 'kubectl apply -f ns.yaml'
                         sh 'kubectl apply -f backdep.yaml'
                         sh 'kubectl apply -f frontdep.yaml'
                         sh 'kubectl apply -f backsvc.yaml'
                         sh 'kubectl apply -f frontsvc.yaml'
                         }
                  }
               }
        post {
            always { 
                    cleansWs()
                    }
             }
    }   

